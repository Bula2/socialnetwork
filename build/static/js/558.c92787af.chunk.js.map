{"version":3,"file":"static/js/558.c92787af.chunk.js","mappings":"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","sources":["webpack://socialnetwork/./src/components/Profile/Profile.module.scss?4008","webpack://socialnetwork/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","webpack://socialnetwork/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?2ed9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://socialnetwork/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","webpack://socialnetwork/./src/components/Profile/MyPosts/Posts/Post.module.scss?c7b3","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.jsx","hoc/withAuthNavigate.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__iH1Oz\"};","// extracted by mini-css-extract-plugin\nexport default {\"person\":\"ProfileInfo_person__9o1nq\",\"avatar\":\"ProfileInfo_avatar__eRTAN\",\"person_info\":\"ProfileInfo_person_info__xhP9j\",\"person_main_info\":\"ProfileInfo_person_main_info__zfFEj\",\"person_main_info_item\":\"ProfileInfo_person_main_info_item__80aUP\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React, {useEffect, useState} from \"react\";\r\nimport cls from \"./ProfileStatus.module.scss\"\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profile_status}>\r\n            { !editMode && <div>\r\n                    <span onDoubleClick={activateEditMode}> {props.status !== \"\" ? props.status : \"Статуса нет\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                        <textarea onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                                  autoFocus={true} placeholder={\"Изменить статус\"}\r\n                                  value={status}\r\n                        />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import cls from \"./ProfileInfo.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserImg from \"./../../../assets/img/default_user.png\"\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={cls.person}>\r\n            <div>\r\n                <img className={cls.avatar} src={props.profile.photos.large!=null ? props.profile.photos.large : defaultUserImg} alt=\"Аватарка\"/>\r\n            </div>\r\n            <div className={cls.person_info}>\r\n                <NavLink to=\"/profile\" title=\"Это я\">{props.profile.fullName}</NavLink>\r\n                <div>\r\n                    <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                </div>\r\n                <div className={cls.person_main_info}>\r\n                    <div className={cls.person_main_info_item}><span>O cебе: </span>{props.profile.aboutMe}</div>\r\n                    <div className={cls.person_main_info_item}><span>В поисках работы: </span>{props.profile.lookingForAJob ? \"Да\" : \"Нет\"}</div>\r\n                    <div className={cls.person_main_info_item}><span>Навыки: </span> {props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","// extracted by mini-css-extract-plugin\nexport default {\"make_posts\":\"MyPosts_make_posts__1UpMq\",\"posts\":\"MyPosts_posts__Zgj6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Nn04U\",\"likes\":\"Post_likes__J-yt6\"};","import cls from \"./Post.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserImg from \"./../../../../assets/img/default_user.png\"\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cls.item}>\r\n                <NavLink to=\"/profile\"><img src={props.profile.photos.small!=null ? props.profile.photos.small : defaultUserImg} alt=\"\"/>{props.message}</NavLink>\r\n                <NavLink to=\"/profile\" className={cls.likes}>&#128077;{props.likes}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import cls from \"./MyPosts.module.scss\";\r\nimport Post from \"./Posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/ControlsForm/ControlForm\";\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPost\"}\r\n                   title=\"Новый пост\" placeholder=\"Новый пост\"\r\n                   validate={[required, maxLengthCreator(100)]}\r\n            />\r\n            <button title=\"Опубликовать\">Опубликовать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"})(AddPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log(\"Hello\");\r\n\r\n    let postElements = props.profilePage.postData.map(post =>\r\n        <Post profile={props.profile} message={post.post} key={post.id} likes={post.likes}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPost);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={cls.make_posts}>\r\n                <span>Мои посты</span>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={cls.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        profile: props.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import cls from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"./../Common/Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <center><Preloader/></center>;\r\n\r\n    return (\r\n        <div className={cls.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer profile={props.profile}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId)\r\n                this.props.history.push(\"/login\");\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer);","import {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nexport default function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate =(Component) =>{\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","cls","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","placeholder","src","profile","photos","large","defaultUserImg","alt","to","title","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","small","message","likes","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","maxLengthCreator","React","console","log","postElements","profilePage","postData","map","post","id","values","addPost","newPost","connect","state","dispatch","addPostActionCreator","MyPosts","ProfileInfo","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getProfile","getUserStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent"],"sourceRoot":""}