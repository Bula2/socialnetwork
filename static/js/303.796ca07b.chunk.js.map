{"version":3,"file":"static/js/303.796ca07b.chunk.js","mappings":"8KACA,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA8G,2BAA9G,EAAoJ,0BAApJ,EAA4L,6BAA5L,EAAyO,+BCAzO,G,QAAA,CAAgB,KAAO,yBAAyB,OAAS,6B,mBCWzD,EATmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAAA,YAAhB,UACI,gBAAKD,UAAWC,EAAAA,KAAhB,UAA0B,SAAC,KAAD,CAASD,UAAW,SAAAE,GAAO,OAAIA,EAAQC,SAAWF,EAAAA,OAAa,EAApC,EAAwCG,GAAIN,EAAvE,SAA8ED,EAAMQ,UAGzH,ECTD,EAA0B,0BCS1B,EARiB,SAACR,GACd,OACI,0BACI,iBAAKG,UAAWC,EAAhB,WAA6B,cAAGK,KAAK,WAAWC,MAAOV,EAAMW,QAAQH,KAAxC,UAA8C,gBAAKI,IAAKZ,EAAMW,QAAQE,OAAQC,IAAKd,EAAMQ,SAAYR,EAAMW,QAAQA,YAG3J,E,UCuCKI,GAAkBC,E,OAAAA,GAAU,CAACC,KAAM,oBAAjBD,EAXL,SAAChB,GAEhB,OACI,kBAAMkB,SAAUlB,EAAMmB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAW,WAAYb,KAAM,SAC7BE,MAAM,yDAAYY,YAAY,4DACrC,yFAGX,IAID,EA1CgB,SAACtB,GACb,IAAIuB,EAAkBvB,EAAMwB,YAAYC,YAAYC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAOnB,KACbN,GAAIyB,EAAOzB,IADayB,EAAOzB,GAA/C,IAG1D0B,EAAmB5B,EAAMwB,YAAYK,aAAaH,KAAI,SAAAf,GAAO,OAAI,SAAC,EAAD,CACUA,QAASA,GADJA,EAAQT,GAA3B,IAOjE,OACI,iBAAKC,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UAA+B,wGAC9BmB,MAEL,iBAAKpB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKwB,KAEL,gBAAKzB,UAAWC,EAAhB,UACI,SAACW,EAAD,CAAiBG,SAfjB,SAACY,GACb9B,EAAM+B,OAAOD,EAAOE,OACvB,WAkBJ,E,UCdD,G,SAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACHX,YAAaW,EAAMX,YAE1B,IAE0B,SAACY,GACxB,MAAO,CACHL,OAAQ,SAACM,GACLD,GAASE,EAAAA,EAAAA,GAAoBD,GAChC,EAER,IAED,CAGEE,G,mJCnBEC,EAA6B,SAACL,GAAD,MAAY,CACzCM,OAAQN,EAAMO,KAAKD,OADU,EAIpBE,EAAkB,SAACC,GAAc,IACpCC,EADmC,0IAErC,WACI,OAAIC,KAAK9C,MAAMyC,QACR,SAACG,GAAD,UAAeE,KAAK9C,SADG,SAAC,KAAD,CAAUO,GAAG,UAE9C,KALoC,GACTwC,EAAAA,WAShC,OAFqCb,EAAAA,EAAAA,IAAQM,EAARN,CAAoCW,EAG5E,C","sources":["webpack://socialnetwork/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://socialnetwork/./src/components/Dialogs/DiaolgItem/DialogItem.module.scss?1829","components/Dialogs/DiaolgItem/DialogItem.jsx","webpack://socialnetwork/./src/components/Dialogs/Messages/Messages.module.scss?4b9e","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthNavigate.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__x2EQN\",\"dialogs_items\":\"Dialogs_dialogs_items__3YCBp\",\"item_head\":\"Dialogs_item_head__-ETkI\",\"messages\":\"Dialogs_messages__bW-Vj\",\"main_dialog\":\"Dialogs_main_dialog__A876p\",\"message_input\":\"Dialogs_message_input__Wg0VT\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__eRrB1\",\"active\":\"DialogItem_active__fK+Es\"};","import cls from \"./DialogItem.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={cls.dialog_item}>\r\n            <div className={cls.item}><NavLink className={clsName => clsName.isActive ? cls.active : \"\"} to={path}>{props.name}</NavLink></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Messages_message__7D-qW\"};","import cls from \"./Messages.module.scss\"\r\n\r\nconst Messages = (props) =>{\r\n    return(\r\n        <div>\r\n            <div className={cls.message}><a href=\"/friends\" title={props.message.name}><img src={props.message.avatar} alt={props.name}/></a>{props.message.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages","import cls from \"./Dialogs.module.scss\";\r\nimport React from \"react\";\r\nimport DialogItem from \"./DiaolgItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id}\r\n                                                                                  id={dialog.id}/>);\r\n\r\n    let messagesElements = props.dialogsPage.messagesData.map(message => <Messages key={message.id}\r\n                                                                                   message={message}/>);\r\n    \r\n    let addNewMes = (values) => {\r\n        props.addMes(values.newMes)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.dialogs}>\r\n            <div className={cls.dialogs_items}>\r\n                <div className={cls.item_head}><h3>Мои сообщения</h3></div>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={cls.messages}>\r\n                <div className={cls.main_dialog}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div className={cls.message_input}>\r\n                    <AddMesFormRedux onSubmit={addNewMes}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMesForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={\"textarea\"} name={\"newMes\"}\r\n                   title=\"Отправить\" placeholder=\"Сообщение\"/>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMesFormRedux = reduxForm({form: \"dialogAddMesForm\"})(AddMesForm)\r\n\r\nexport default Dialogs;","import {addMesActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMes: (mes) => {\r\n            dispatch(addMesActionCreator(mes));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    // withAuthNavigate\r\n)(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate =(Component) =>{\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","path","id","className","cls","clsName","isActive","to","name","href","title","message","src","avatar","alt","AddMesFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","dialogsElements","dialogsPage","dialogsData","map","dialog","messagesElements","messagesData","values","addMes","newMes","compose","connect","state","dispatch","mes","addMesActionCreator","Dialogs","mapStateToPropsForNavigate","isAuth","auth","withAuthNavigate","Component","NavigateComponent","this","React"],"sourceRoot":""}