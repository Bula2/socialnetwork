{"version":3,"file":"static/js/714.edd8bb54.chunk.js","mappings":";gOACA,GAAgB,QAAU,mCCA1B,EAAyB,4BAAzB,EAA8D,4BAA9D,EAAyG,kCAAzG,EAAyJ,iCAAzJ,EAA6M,sCAA7M,EAA2Q,2CAA3Q,EAAmV,gDAAnV,EAAiZ,iCAAjZ,EAAmc,oCAAnc,EAA4f,wCAA5f,EAA8iB,6BAA9iB,EAA+lB,uCAA/lB,EAA2pB,0DCA3pB,GAAiB,WC2CjB,EAzCsB,SAACA,GAEnB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,OACnB,GAAE,CAACJ,EAAMI,SAeV,OACI,iBAAKG,UAAWC,EAAAA,eAAhB,WACON,IAAY,0BACP,kBAAMO,QAhBG,WACrBN,GAAY,EACf,EAce,cAAoD,KAAjBH,EAAMI,OAAgBJ,EAAMI,OAAS,qEAI9EF,IACE,0BACQ,qBAAUQ,SAbP,SAACC,GACrBN,EAAUM,EAAEC,cAAcC,MAC5B,EAWuDC,OAlB7B,WACvBX,GAAY,GACZH,EAAMe,iBAAiBX,EAC1B,EAgB6BY,WAAW,EAAMC,YAAa,wFAC9BJ,MAAOT,QAMxC,+BCkCD,GANiCc,EAAAA,EAAAA,GAAU,CACvCC,KAAM,eACNC,oBAAoB,EACpBC,kBAAkB,GAHWH,EAjET,SAAC,GAAiD,IAAhDI,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,QAASpB,EAAwB,EAAxBA,YAAaqB,EAAW,EAAXA,MAC1D,OACI,kBAAMC,SAAUH,EAAhB,WACI,iBAAKf,UAAWC,EAAhB,WACI,4BACI,iBAAKD,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,mCACA,SAACkB,EAAA,EAAD,CAAOT,YAAa,qBACbU,KAAM,WAAYC,UAAWC,EAAAA,QAGxC,iBAAKtB,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,sCACA,SAACkB,EAAA,EAAD,CAAOT,YAAa,kCACbU,KAAM,UAAWC,UAAWC,EAAAA,QAGvC,iBAAKtB,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,uGACA,SAACkB,EAAA,EAAD,CAAOI,KAAK,WACLH,KAAM,iBAAkBC,UAAWG,EAAAA,QAG9C,iBAAKxB,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,qDACA,SAACkB,EAAA,EAAD,CAAOT,YAAa,uCACbU,KAAM,4BAA6BC,UAAWC,EAAAA,WAG7D,0BACI,iBAAKtB,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,gEACCwB,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GAC/B,OAAO,gBAAe7B,UAAWC,EAA1B,UACH,iBAAeD,UAAWC,EAA1B,WACI,kBAAMD,UAAWC,EAAjB,UAAkD4B,EAAlD,SACA,SAACV,EAAA,EAAD,CAAiBT,YAAamB,EACvBT,KAAI,mBAAcS,GAAOR,UAAWG,EAAAA,EACpCxB,UAAWC,GAFN4B,KAFNA,IADGA,EASpB,aAIb,2BACCZ,IACG,gBAAKjB,UAAWC,EAAhB,UACI,0BAAOgB,OAGf,iBAAKjB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,0FAEJ,gBAAKD,UAAWC,EAAhB,UACI,mBAAQC,QAAS,kBAAMN,GAAY,EAAlB,EAAjB,wEAMnB,ICGKkC,EAAc,SAAC,GAAqC,IAApCd,EAAmC,EAAnCA,QAASe,EAA0B,EAA1BA,QAASnC,EAAiB,EAAjBA,YACpC,OACI,iBAAKI,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,sDAAsBe,EAAQgB,YAElC,iBAAKhC,UAAWC,EAAhB,WACI,uHAAgCe,EAAQiB,eAAiB,eAAO,yBAEpE,iBAAKjC,UAAWC,EAAhB,WACI,qEADJ,IAC2Be,EAAQkB,8BAEnC,iBAAKlC,UAAWC,EAAhB,WACI,iFACCwB,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GAC/B,GAAIb,EAAQW,SAASE,GACjB,OAAO,SAACM,EAAD,CAAmBC,aAAcP,EAAKQ,aAAcrB,EAAQW,SAASE,IAAvDA,EAC5B,OAEJE,IACG,gBAAK/B,UAAWC,EAAhB,UACI,mBAAQC,QAAS,kBAAMN,GAAY,EAAlB,EAAjB,gGAInB,EAEKuC,EAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OACI,iBAAKrC,UAAWC,EAAhB,WACI,0BAAOmC,IADX,MACmCC,IAG1C,EAED,EAnGoB,SAAC,GAIO,IAHHC,EAGE,EAHFA,YAAaC,EAGX,EAHWA,UAAWC,EAGtB,EAHsBA,cACxBhC,EAEE,EAFFA,iBAAkBX,EAEhB,EAFgBA,OAAQmB,EAExB,EAFwBA,QAASe,EAEjC,EAFiCA,QACnCU,EACE,EADFA,YAiBrB,GAAgC/C,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAG,EAAAA,EAAAA,YAAU,WACNuC,GAAY,EACf,GAAE,IAQH,OACI,iBAAKtC,UAAWC,EAAhB,WACI,4BACI,gBAAKD,UAAWC,EACXyC,IAA6B,MAAxB1B,EAAQ2B,OAAOC,MAAgB5B,EAAQ2B,OAAOC,MAAQC,EAC3DC,IAAI,qDACRf,IACG,gBAAK/B,UAAWC,EAAhB,SACKuC,GACG,kBAAOrC,SAAU,SAACC,IA3BlB,SAACA,GACjBA,EAAE2C,OAAOC,MAAMC,QACfV,EAAUnC,EAAE2C,OAAOC,MAAM,GAEhC,CAwB2BE,CAAgB9C,GA/BxCkC,GAAY,EAiCS,EACM7B,WAAW,EACXc,KAAK,UACZ,mBAAQrB,QAzCN,WACtBoC,GAAY,EACf,EAuCuB,6FAGhB,iBAAKtC,UAAWC,EAAhB,WACI,SAAC,KAAD,CAASkD,GAAG,WAAWC,MAAM,4BAA7B,SAAsCpC,EAAQqC,YAC9C,gBAAKrD,UAAWC,EAAhB,UACI,SAAC,EAAD,CAAeJ,OAAQA,EAAQW,iBAAkBA,MAEpDb,GACG,SAAC,EAAD,CAAiB2D,cAAetC,EAASA,QAASA,EAASE,SA9B1D,SAACqC,GACfd,EAAYc,GAAUC,MAAK,WACvB5D,GAAY,EACf,GACH,EA0B8FA,YAAaA,KAC5F,SAACkC,EAAD,CAAad,QAASA,EAASe,QAASA,EAASnC,YAAaA,SAKjF,YCpED,EAAkC,iCAAlC,EAAgF,4BAAhF,EAAoH,uBCApH,EAAuB,mBAAvB,EAAkD,oBAAlD,EAAqF,8CCwBrF,EApBa,SAACH,GAUV,OACI,iBAAKO,UAAWC,EAAhB,WACI,UAAC,KAAD,CAASkD,GAAG,GAAZ,WAAe,gBAAKT,IAAmC,MAA9BjD,EAAMuB,QAAQ2B,OAAOc,MAAgBhE,EAAMuB,QAAQ2B,OAAOc,MAAQZ,EACvEC,IAAI,KAAKrD,EAAMiE,YACnC,UAAC,KAAD,CAASP,GAAG,GAAGjD,QAZH,WACVT,EAAMkE,WAGRlE,EAAMmE,QAAQnE,EAAMoE,IAFpBpE,EAAMqE,QAAQrE,EAAMoE,GAI3B,EAOgB7D,UAAW+D,IAAG9D,EAAWR,EAAMkE,YAAc1D,GADtD,yBACmFR,EAAMuE,WAGpG,YCHKC,GAAmBtD,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAjBD,EAbL,SAAClB,GAEjB,OACI,kBAAMyB,SAAUzB,EAAMsB,aAAtB,WACI,SAACI,EAAA,EAAD,CAAOE,UAAWC,EAAAA,EAAUF,KAAM,UAC3BgC,MAAM,0DAAa1C,YAAY,0DAC/BwD,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,SAE7C,mBAAQhB,MAAM,2EAAd,wFAGX,IAmCD,EA/BgBiB,EAAAA,MAAW,SAAA5E,GAEvB,IAAI6E,EAAe7E,EAAM8E,YAAYC,SAAS5C,KAAI,SAAA6C,GAAI,OAClD,SAAC,EAAD,CAAMX,QAASrE,EAAMqE,QAAS9C,QAASvB,EAAMuB,QACvC0C,QAASe,EAAKA,KAAoBT,MAAOS,EAAKT,MAC9CL,WAAYc,EAAKd,WAAYE,GAAIY,EAAKZ,GAAID,QAASnE,EAAMmE,SADhCa,EAAKZ,GAFc,IAUtD,OACI,4BACI,gBAAK7D,UAAWC,EAAhB,UACI,kFAEHR,EAAMsC,UACH,iCACI,gBAAK/B,UAAWC,EAAhB,UACI,SAACgE,EAAD,CAAkB/C,SAZrB,SAACwD,GACdjF,EAAMkF,QAAQD,EAAOE,QACxB,OAYe,gBAAK5E,UAAWC,EAAhB,SACKqE,SAMxB,cCnCD,GAFyBO,EAAAA,EAAAA,KATD,SAACC,EAAOrF,GAC5B,MAAO,CACH8E,YAAaO,EAAMP,YACnBvD,QAASvB,EAAMuB,QACfe,QAAStC,EAAMsC,QAEtB,GAGiD,CAAC4C,QAAAA,EAAAA,GAASb,QAAAA,EAAAA,GAASF,QAAAA,EAAAA,IAA5CiB,CAAsDE,aCQ/E,EAhBgB,SAACtF,GAEb,OAAKA,EAAMuB,SAGP,iBAAKhB,UAAWC,EAAAA,QAAhB,WACI,SAAC,EAAD,CAAa8B,QAAStC,EAAMsC,QAASf,QAASvB,EAAMuB,QACvCnB,OAAQJ,EAAMI,OAAQW,iBAAkBf,EAAMe,iBAC9CgC,cAAe/C,EAAM+C,cAAeF,YAAa7C,EAAM6C,YACvDC,UAAW9C,EAAM8C,UAAWE,YAAahD,EAAMgD,eAE5D,SAAC,EAAD,CAAkBV,QAAStC,EAAMsC,QAASf,QAASvB,EAAMuB,cATtC,6BAAQ,SAACgE,EAAA,EAAD,KAYtC,sCCJKC,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAWD,OAXCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEFC,eAAiB,WACb,IAAIC,EAAS,EAAK1F,MAAM2F,OAAOC,OAAOF,OACjCA,IACDA,EAAS,EAAK1F,MAAM6F,mBAEhB,EAAK7F,MAAM8F,QAAQC,KAAK,UAEhC,EAAK/F,MAAMgG,WAAWN,GACtB,EAAK1F,MAAMiG,cAAcP,EAC5B,IAgBA,OAhBA,yCAGD,WACIQ,KAAKT,gBACR,mCAED,SAAmBU,EAAWC,EAAWC,GACjCF,EAAUR,OAAOC,OAAOF,SAAWQ,KAAKlG,MAAM2F,OAAOC,OAAOF,QAC5DQ,KAAKT,gBACZ,uBAED,WACI,OACI,SAAC,GAAD,kBAAaS,KAAKlG,OAAlB,IAAyBsC,SAAU4D,KAAKlG,MAAM2F,OAAOC,OAAOF,SAEnE,OA3BCF,CAAyBZ,EAAAA,WAsC/B,IAAe0B,EAAAA,GAAAA,KACXlB,EAAAA,EAAAA,KATkB,SAACC,GAAD,MAAY,CAC9B9D,QAAS8D,EAAMP,YAAYvD,QAC3BnB,OAAQiF,EAAMP,YAAY1E,OAC1ByF,iBAAkBR,EAAMkB,KAAKb,OAC7Bc,OAAQnB,EAAMkB,KAAKC,OACnBzD,cAAesC,EAAMP,YAAY/B,cALf,GASO,CAACiD,WAAAA,EAAAA,GAAYC,cAAAA,EAAAA,GAClClF,iBAAAA,EAAAA,GAAkB8B,YAAAA,EAAAA,GAAaC,UAAAA,EAAAA,GAAWE,YAAAA,EAAAA,MClDnC,SAAoByD,GAY/B,OAXA,SAAiCzG,GAC7B,IAAI0G,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXjB,GAASkB,EAAAA,EAAAA,MACb,OACI,SAACL,GAAD,kBACQzG,GADR,IAEI2F,OAAQ,CAAEe,SAAAA,EAAUE,SAAAA,EAAUhB,OAAAA,KAGzC,CAEJ,GDuCGmB,GAAAA,EAJJ,CAKEvB,mKEvDEwB,EAA6B,SAAC3B,GAAD,MAAY,CACzCmB,OAAQnB,EAAMkB,KAAKC,OADU,EAIpBO,EAAkB,SAACN,GAAc,IACpCQ,EADmC,0IAErC,WACI,OAAIf,KAAKlG,MAAMwG,QACR,SAACC,GAAD,UAAeP,KAAKlG,SADG,SAAC,KAAD,CAAU0D,GAAG,UAE9C,KALoC,GACTkB,EAAAA,WAShC,OAFqCQ,EAAAA,EAAAA,IAAQ4B,EAAR5B,CAAoC6B,EAG5E,sBCnBD,OAOC,WACA,aAEA,IAAIC,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAU/D,OAAQ8D,IAAK,CAC1C,IAAIE,EAAMD,UAAUD,GACpB,GAAKE,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQtB,KAAKyB,QACP,GAAIE,MAAMC,QAAQH,IACxB,GAAIA,EAAIhE,OAAQ,CACf,IAAIoE,EAAQR,EAAWS,MAAM,KAAML,GAC/BI,GACHP,EAAQtB,KAAK6B,EAEd,OACK,GAAgB,WAAZH,EACV,GAAID,EAAIM,WAAa9F,OAAO+F,UAAUD,SACrC,IAAK,IAAI1F,KAAOoF,EACXN,EAAOc,KAAKR,EAAKpF,IAAQoF,EAAIpF,IAChCiF,EAAQtB,KAAK3D,QAIfiF,EAAQtB,KAAKyB,EAAIM,WArBD,CAwBlB,CAED,OAAOT,EAAQY,KAAK,IACpB,CAEoCC,EAAOC,SAC3Cf,EAAWgB,QAAUhB,EACrBc,EAAOC,QAAUf,QAGX,kBACL,OAAOA,CADF,UAAe,OAAf,YA5CP","sources":["webpack://socialnetwork/./src/components/Profile/Profile.module.scss?4008","webpack://socialnetwork/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","webpack://socialnetwork/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?2ed9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://socialnetwork/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","webpack://socialnetwork/./src/components/Profile/MyPosts/Posts/Post.module.scss?c7b3","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.jsx","hoc/withAuthNavigate.jsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__iH1Oz\"};","// extracted by mini-css-extract-plugin\nexport default {\"person\":\"ProfileInfo_person__9o1nq\",\"avatar\":\"ProfileInfo_avatar__eRTAN\",\"change_photo\":\"ProfileInfo_change_photo__8kWOr\",\"person_info\":\"ProfileInfo_person_info__xhP9j\",\"person_main_info\":\"ProfileInfo_person_main_info__zfFEj\",\"person_main_info_item\":\"ProfileInfo_person_main_info_item__80aUP\",\"person_main_info_item_text\":\"ProfileInfo_person_main_info_item_text__mR49m\",\"links_input\":\"ProfileInfo_links_input__+5x1B\",\"profile_status\":\"ProfileInfo_profile_status__A8S5d\",\"person_main_button\":\"ProfileInfo_person_main_button__ykkfi\",\"contact\":\"ProfileInfo_contact__1Z2of\",\"data_form_buttons\":\"ProfileInfo_data_form_buttons__pGUMi\",\"form_summary_error\":\"ProfileInfo_form_summary_error__SpTK+\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React, {useEffect, useState} from \"react\";\r\nimport cls from \"./ProfileStatus.module.scss\"\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profile_status}>\r\n            { !editMode && <div>\r\n                    <span onClick={activateEditMode}> {props.status !== \"\" ? props.status : \"Статуса нет\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                        <textarea onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                                  autoFocus={true} placeholder={\"Изменить статус\"}\r\n                                  value={status}\r\n                        />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import cls from \"./ProfileInfo.module.scss\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../Common/ControlsForm/ControlForm\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, setEditMode, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={cls.person_main_info}>\r\n                <div>\r\n                    <div className={cls.person_main_info_item}>\r\n                        <span className={cls.person_main_info_item_text}>Имя: </span>\r\n                        <Field placeholder={\"Имя\"}\r\n                               name={\"fullName\"} component={Textarea}\r\n                        />\r\n                    </div>\r\n                    <div className={cls.person_main_info_item}>\r\n                        <span className={cls.person_main_info_item_text}>O cебе: </span>\r\n                        <Field placeholder={\"О себе\"}\r\n                               name={\"aboutMe\"} component={Textarea}\r\n                        />\r\n                    </div>\r\n                    <div className={cls.person_main_info_item}>\r\n                        <span className={cls.person_main_info_item_text}>В поисках работы: </span>\r\n                        <Field type=\"checkbox\"\r\n                               name={\"lookingForAJob\"} component={Input}\r\n                        />\r\n                    </div>\r\n                    <div className={cls.person_main_info_item}>\r\n                        <span className={cls.person_main_info_item_text}>Навыки: </span>\r\n                        <Field placeholder={\"Навыки\"}\r\n                               name={\"lookingForAJobDescription\"} component={Textarea}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={cls.person_main_info_item}>\r\n                        <span className={cls.person_main_info_item_text}>Контакты: </span>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                            return <div key={key} className={cls.person_main_info_item}>\r\n                                <div key={key} className={cls.contact}>\r\n                                    <span className={cls.person_main_info_item_text}>{key}: </span>\r\n                                    <Field key={key} placeholder={key}\r\n                                           name={`contacts.${key}`} component={Input}\r\n                                           className={cls.links_input}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            {error &&\r\n                <div className={cls.form_summary_error}>\r\n                    <span>{error}</span>\r\n                </div>\r\n            }\r\n            <div className={cls.data_form_buttons}>\r\n                <div className={cls.person_main_button}>\r\n                    <button>Сохранить</button>\r\n                </div>\r\n                <div className={cls.person_main_button}>\r\n                    <button onClick={() => setEditMode(false)}>Отменить</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n    enableReinitialize: true,\r\n    destroyOnUnmount: false\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import cls from \"./ProfileInfo.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserImg from \"./../../../assets/img/default_user.png\"\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport {useEffect, useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n                         uploadPhoto, savePhoto, isPhotoUpload,\r\n                         updateUserStatus, status, profile, isOwner,\r\n                         saveProfile\r\n                     }) => {\r\n\r\n    const showPhotoUploader = () => {\r\n        uploadPhoto(true);\r\n    }\r\n\r\n    const hidePhotoUploader = () => {\r\n        uploadPhoto(false);\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        uploadPhoto(false);\r\n    }, [])\r\n\r\n    const onSubmit = (formData) => {\r\n       saveProfile(formData).then(() => {\r\n           setEditMode(false);\r\n       });\r\n    }\r\n\r\n    return (\r\n        <div className={cls.person}>\r\n            <div>\r\n                <img className={cls.avatar}\r\n                     src={profile.photos.large != null ? profile.photos.large : defaultUserImg}\r\n                     alt=\"Аватарка\"/>\r\n                {isOwner &&\r\n                    <div className={cls.change_photo}>\r\n                        {isPhotoUpload ?\r\n                            <input onChange={(e) => {\r\n                                onPhotoSelected(e);\r\n                                hidePhotoUploader();\r\n                            }}\r\n                                   autoFocus={true}\r\n                                   type=\"file\"/> :\r\n                            <button onClick={showPhotoUploader}>Изменить фото</button>}\r\n                    </div>}\r\n            </div>\r\n            <div className={cls.person_info}>\r\n                <NavLink to=\"/profile\" title=\"Это я\">{profile.fullName}</NavLink>\r\n                <div className={cls.profile_status}>\r\n                    <ProfileStatus status={status} updateUserStatus={updateUserStatus}/>\r\n                </div>\r\n                {editMode ?\r\n                    <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} setEditMode={setEditMode}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner} setEditMode={setEditMode}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, setEditMode}) => {\r\n    return (\r\n        <div className={cls.person_main_info}>\r\n            <div className={cls.person_main_info_item}>\r\n                <span>O cебе: </span>{profile.aboutMe}\r\n            </div>\r\n            <div className={cls.person_main_info_item}>\r\n                <span>В поисках работы: </span>{profile.lookingForAJob ? \"Да\" : \"Нет\"}\r\n            </div>\r\n            <div className={cls.person_main_info_item}>\r\n                <span>Навыки: </span> {profile.lookingForAJobDescription}\r\n            </div>\r\n            <div className={cls.person_main_info_item}>\r\n                <span>Контакты: </span>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    if (profile.contacts[key])\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            {isOwner &&\r\n                <div className={cls.person_main_button}>\r\n                    <button onClick={() => setEditMode(true)}>Редактировать</button>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={cls.contact}>\r\n            <span>{contactTitle}</span> : {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"header_my_posts\":\"MyPosts_header_my_posts__X65jJ\",\"make_posts\":\"MyPosts_make_posts__1UpMq\",\"posts\":\"MyPosts_posts__Zgj6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Nn04U\",\"likes\":\"Post_likes__J-yt6\",\"like_was_add\":\"Post_like_was_add__kn08h\"};","import cls from \"./Post.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserImg from \"./../../../../assets/img/default_user.png\"\r\nimport cn from \"classnames\"\r\n\r\nconst Post = (props) => {\r\n\r\n    const updateLikes = () => {\r\n         if (!props.likeWasAdd)\r\n            props.addLike(props.id);\r\n         else\r\n            props.delLike(props.id);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.item}>\r\n            <NavLink to=\"\"><img src={props.profile.photos.small != null ? props.profile.photos.small : defaultUserImg}\r\n                                alt=\"\"/>{props.message}</NavLink>\r\n            <NavLink to=\"\" onClick={updateLikes}\r\n                     className={cn(cls.likes, props.likeWasAdd && cls.like_was_add)}>&#128077;{props.likes}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import cls from \"./MyPosts.module.scss\";\r\nimport Post from \"./Posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/ControlsForm/ControlForm\";\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPost\"}\r\n                   title=\"Новый пост\" placeholder=\"Новый пост\"\r\n                   validate={[required, maxLengthCreator(100)]}\r\n            />\r\n            <button title=\"Опубликовать\">Опубликовать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"})(AddPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElements = props.profilePage.postData.map(post =>\r\n        <Post addLike={props.addLike} profile={props.profile}\r\n              message={post.post} key={post.id} likes={post.likes}\r\n              likeWasAdd={post.likeWasAdd} id={post.id} delLike={props.delLike}\r\n        />);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPost);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={cls.header_my_posts}>\r\n                <span>Мои посты</span>\r\n            </div>\r\n            {props.isOwner &&\r\n                <>\r\n                    <div className={cls.make_posts}>\r\n                        <AddPostFormRedux onSubmit={addNewPost}/>\r\n                    </div>\r\n                    <div className={cls.posts}>\r\n                        {postElements}\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost, addLike, delLike} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        profile: props.profile,\r\n        isOwner: props.isOwner\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, addLike, delLike})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import cls from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"./../Common/Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <center><Preloader/></center>;\r\n\r\n    return (\r\n        <div className={cls.content}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile}\r\n                         status={props.status} updateUserStatus={props.updateUserStatus}\r\n                         isPhotoUpload={props.isPhotoUpload} uploadPhoto={props.uploadPhoto}\r\n                         savePhoto={props.savePhoto} saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer isOwner={props.isOwner} profile={props.profile}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateUserStatus,\r\n    uploadPhoto\r\n} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId)\r\n                this.props.history.push(\"/login\");\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.router.params.userId !== this.props.router.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.router.params.userId}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isPhotoUpload: state.profilePage.isPhotoUpload\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getUserStatus,\r\n        updateUserStatus, uploadPhoto, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer);","import {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nexport default function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate =(Component) =>{\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","cls","onClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","placeholder","reduxForm","form","enableReinitialize","destroyOnUnmount","handleSubmit","profile","error","onSubmit","Field","name","component","Textarea","type","Input","Object","keys","contacts","map","key","ProfileData","isOwner","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","uploadPhoto","savePhoto","isPhotoUpload","saveProfile","src","photos","large","defaultUserImg","alt","target","files","length","onPhotoSelected","to","title","fullName","initialValues","formData","then","small","message","likeWasAdd","delLike","id","addLike","cn","likes","AddPostFormRedux","validate","required","maxLengthCreator","React","postElements","profilePage","postData","post","values","addPost","newPost","connect","state","MyPosts","Preloader","ProfileContainer","refreshProfile","userId","router","params","authorizedUserId","history","push","getProfile","getUserStatus","this","prevProps","prevState","snapshot","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","Array","isArray","inner","apply","toString","prototype","call","join","module","exports","default"],"sourceRoot":""}